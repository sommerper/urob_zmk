#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/ext_power.h>
#include "../zmk-nodefree-config/helper.h"
#include "../zmk-nodefree-config/keypos_def/keypos_klor.h"

#define BASE      0
#define LOWER     1
#define RAISE     2

#define BASEMAC   3
#define LOWERMAC  4
#define RAISEMAC  5

#define EXTRAS    6
#define NUMPAD    7
#define NUMBERS   8
#define BLUETOOTH 9
#define LANG      10

#define KEYS_L LT4 LT3 LT2 LT1 LT0 LM5 LM4 LM3 LM2 LM1 LM0 LB5 LB4 LB3 LB2 LB1 LB0  // left-hand keys
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RM0 RM1 RM2 RM3 RM4 RM5 RB0 RB1 RB2 RB3 RB4 RB5  // right-hand keys
#define THUMBS_L LH3 LH2 LH1 LH0
#define THUMBS_R RH0 RH1 RH2 RH3

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <LOWER RAISE>;
            then-layer = <EXTRAS>;
        };
    };
};


#define XXX &none
#define ___ &trans

#undef COMBO_TERM
#define COMBO_TERM 40

// ZMK_COMBO(comboColon, &kp COLON, RB1 RB2, 0)
// ZMK_COMBO(comboSingleQuote, &kp SINGLE_QUOTE, RT1 RT2, 0)
// ZMK_COMBO(comboDoubleQuote, &kp DOUBLE_QUOTES,  RT2 RT3, 0)

ZMK_COMBO(comboDot,   &kp DOT, RB4 RB5, 0)
ZMK_COMBO(comboComma, &kp COMMA, RB3 RB4, 0)

#define MAKE_HRM(NAME, HOLD, TAP, TRIGGER_POS) \
    ZMK_BEHAVIOR(NAME, hold_tap, \
        flavor = "balanced"; \
        tapping-term-ms = <280>; \
        quick-tap-ms = <150>; \
        bindings = <HOLD>, <TAP>; \
        hold-trigger-key-positions = <TRIGGER_POS>; \
        hold-trigger-on-release; \
        hold-while-undecided; \
    )

// left-hand HRMs
MAKE_HRM(hml, &kp, &kp, KEYS_R THUMBS_L THUMBS_R)

// right-hand HRMs
MAKE_HRM(hmr, &kp, &kp, KEYS_L THUMBS_L THUMBS_R)

&lt {
  tapping-term-ms = <280>;
  quick-tap-ms = <280>; // repeat on tap-into-hold
  flavor = "balanced";
};

&mt {
  tapping-term-ms = <280>;
  quick-tap-ms = <280>; // repeat on tap-into-hold
  flavor = "balanced";
};

// ----------------------------
ZMK_BEHAVIOR(lt_spc, hold_tap,
    flavor = "balanced";
    tapping-term-ms = <200>;
    quick-tap-ms = <175>;
    bindings = <&mo>, <&spc_morph>;
)
ZMK_BEHAVIOR(spc_morph, mod_morph,
    bindings = <&kp SPACE>, <&dot_spc>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
)
ZMK_BEHAVIOR(dot_spc, macro,
    wait-ms = <0>;
    tap-ms = <5>;
    bindings = <&kp DOT &kp SPACE &sk LSHFT>;
)
// ----------------------------
// ----------------------------
ZMK_BEHAVIOR(alt_dot, hold_tap,
    flavor = "balanced";
    tapping-term-ms = <200>;
    bindings = <&kp>, <&alt_morph>;
)
ZMK_BEHAVIOR(alt_morph, mod_morph,
    bindings = <&kp DOT>, <&kp COMMA>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
)
// ----------------------------
// ----------------------------
ZMK_BEHAVIOR(copy_cut, tap_dance,
    tapping-term-ms = <200>;
    bindings = <&kp LC(INS)>, <&kp LC(X)>;
)

ZMK_BEHAVIOR(copy_cut_mac, tap_dance,
    tapping-term-ms = <200>;
    bindings = <&kp LG(V)>, <&kp LG(X)>;
)

ZMK_BEHAVIOR(dot_comma, tap_dance,
    tapping-term-ms = <200>;
    bindings = <&kp DOT>, <&kp COMMA>;
)

ZMK_BEHAVIOR(sqt_dqt, tap_dance,
    tapping-term-ms = <200>;
    bindings = <&kp SQT>, <&kp DQT>;
)
// ----------------------------
ZMK_BEHAVIOR(qu_macro, macro,
    wait-ms = <0>;
    tap-ms = <5>;
    bindings = <&kp Q>, <&kp U>;
)
ZMK_BEHAVIOR(qui_macro, macro,
    wait-ms = <0>;
    tap-ms = <5>;
    bindings = <&kp Q>, <&kp U>, <&kp I>;
)
ZMK_BEHAVIOR(sch_macro, macro,
    wait-ms = <0>;
    tap-ms = <5>;
    bindings = <&kp S>, <&kp C>, <&kp H>;
)

/ {

    keymap {
      compatible = "zmk,keymap";

      // base_layer {
      //   label= "BASE";
      //   bindings = <
      //               &kp Q       &kp W         &kp F           &kp P     &kp B                                 &kp J               &kp L         &kp U         &kp Y         &kp Z
      //     &kp ESC   &kp A       &kp R         &kp S           &kp T     &kp G                                 &kp M               &kp N         &kp E         &kp I         &kp O        &kp SEMI
      //     &kp TAB   &kp COMMA   &kp K         &kp C           &kp D     &sqt_dqt      &trans      &trans      &kp COLON           &kp H         &kp X         &kp V         &dot_comma   &kp ENTER
      //               XXX         &mt LALT TAB  &lt LOWER BSPC  &lt NUMPAD ESC                      &kp ENTER   &lt_spc RAISE 0     &alt_dot RALT 0    XXX
      //   >;
      //   sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
      //   //sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
      // };

      base_layer {
        label= "BASE";
        bindings = <
                    XXX         &kp C         &kp L               &kp D           &kp K                                       &kp J               &kp F             &kp O             &kp U         &kp SEMI
          &kp ESC   &kp R       &hml LGUI S   &hml LCTRL T        &hml LSHIFT H   &kp G                                       &kp M               &hmr RSHIFT N     &hmr RCTRL E      &hmr RGUI I   &kp A       XXX
          XXX       &kp Q       &kp W         &kp V               &lt NUMPAD B    &sqt_dqt        XXX             XXX         &kp COLON           &kp P             &kp X             &kp Y         &kp Z       &kp ENTER
                                XXX           &mt LALT TAB        &lt LOWER BSPC  &lt NUMBERS ESC                             &lt LANG RET        &lt_spc RAISE 0   &alt_dot RALT 0   &kp COMMA
        >;
        sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        //sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
      };


      lower_layer {
        label= "LOWER";
        bindings = <
                    &tog BASEMAC  &kp K_VOL_DN  &kp K_MUTE          &kp K_VOL_UP  &kp LC(BSPC)                                XXX                 &kp HOME          XXX               &kp END       XXX
          XXX       XXX           &kp LGUI      &kp LCTRL           &kp LSHIFT    &kp BSPC                                    XXX                 &kp LEFT          &kp UP            &kp RIGHT     XXX             XXX
          XXX       &kp LC(Z)     &kp LC(LS(Z)) &copy_cut           &kp LC(V)     &kp DEL         XXX             XXX         XXX                 &kp PG_UP         &kp DOWN          &kp PG_DN     &kp LC(SLASH)   XXX
                                  XXX           XXX                 XXX           XXX                                         XXX                 &kp MINUS         XXX               XXX
        >;
        // sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
      };


      raise_layer {
        label= "RAISE";
        bindings = <
                    XXX             &kp AT    &kp HASH  &kp DOLLAR  &kp PERCENT                       &kp CARET &kp AMPS      &kp LPAR  &kp RPAR   &kp MINUS
          XXX       &kp BACKSLASH   &kp LT    &kp SLASH &kp GT      &kp QMARK                         XXX       &kp ASTERISK  &kp LBRC  &kp RBRC   &kp PLUS     XXX
          XXX       &kp EXCL        &kp TILDE &kp MINUS &kp DOT     XXX         XXX           XXX     XXX       &kp PIPE      &kp LBKT  &kp RBKT   &kp EQUAL    XXX
                              XXX   XXX       &kp UNDER XXX                                           XXX       XXX           XXX       XXX
        >;
        // sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
      };


      base_layer_mac {
        label= "BASEMAC";
        bindings = <
                    XXX         &kp C         &kp L               &kp D             &kp K                                       &kp J               &kp F               &kp O             &kp U         &kp SEMI
          &kp ESC   &kp R       &hml LGUI S   &hml LCTRL T        &hml LSHIFT H     &kp G                                       &kp M               &hmr RSHIFT N       &hmr RCTRL E      &hmr RGUI I   &kp A       XXX
          &kp TAB   &kp Q       &kp W         &kp V               &lt NUMPAD B      &sqt_dqt        XXX             XXX         &kp COLON           &kp P               &kp X             &kp Y         &kp Z       &kp ENTER
                                XXX           &mt LALT TAB        &lt LOWERMAC BSPC &lt NUMPAD ESC                              &kp ENTER           &lt_spc RAISEMAC 0  &alt_dot RALT 0   &kp COMMA
        >;
        sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        //sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
      };


      lower_layer_mac {
        label= "LOWERMAC";
        bindings = <
                    &tog BASE     &kp K_VOL_DN  &kp K_MUTE          &kp K_VOL_UP  &kp LG(BSPC)                            &kp HOME            &kp LG(LEFT)      XXX               &kp LG(RIGHT) &kp END
          XXX       XXX           &kp LGUI      &kp LCTRL           &kp LSHIFT    &kp BSPC                                XXX                 &kp LEFT          &kp UP            &kp RIGHT     XXX             XXX
          XXX       &kp LG(Z)     &kp LG(LS(Z)) &copy_cut_mac       &kp LG(V)     &kp DEL     XXX             XXX         XXX                 &kp PG_UP         &kp DOWN          &kp PG_DN     &kp LC(SLASH)   XXX
                                  XXX           XXX                 XXX           XXX                                     XXX                 &kp MINUS         XXX               XXX
        >;
        // sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
      };


      raise_layer_mac {
        label= "RAISEMAC";
        bindings = <
                    XXX             &kp AT    &kp HASH  &kp DOLLAR  &kp PERCENT                       &kp CARET &kp AMPS      &kp LPAR  &kp RPAR   &kp MINUS
          XXX       &kp BACKSLASH   &kp LT    &kp SLASH &kp GT      &kp QMARK                         XXX       &kp ASTERISK  &kp LBRC  &kp RBRC   &kp PLUS     XXX
          XXX       &kp EXCL        &kp TILDE &kp MINUS &kp DOT     XXX         XXX           XXX     XXX       &kp PIPE      &kp LBKT  &kp RBKT   &kp EQUAL    XXX
                    XXX             XXX       &kp UNDER XXX                                                  XXX       XXX           XXX       XXX
        >;
        // sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
      };

      adjust_layer {
        label= "EXTRAS";
          bindings = <
                        XXX        XXX        XXX           XXX             XXX                                 &kp F13   &kp F7   &kp F8    &kp F9    &kp F10
          &mo BLUETOOTH XXX        XXX        XXX           XXX             XXX                                 &kp F14   &kp F4   &kp F5    &kp F6    &kp F11  XXX
          XXX           XXX        XXX        XXX           XXX             XXX       XXX             XXX       &kp F15   &kp F1   &kp F2    &kp F3    &kp F12  XXX
                                    XXX       XXX           XXX             XXX                                 XXX       XXX      XXX       XXX
        >;
        // sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
      };

      numpad_layer {
        label= "NUMPAD";
          bindings = <
                       XXX        XXX           XXX             XXX             XXX                                 &kp KP_DIVIDE   &kp KP_N7   &kp KP_N8   &kp KP_N9   &kp KP_MINUS
          XXX          XXX        XXX           XXX             XXX             XXX                                 &kp KP_MULTIPLY &kp KP_N4   &kp KP_N5   &kp KP_N6   &kp KP_PLUS   XXX
          XXX          XXX        &kp CAPSLOCK  &kp KP_NUMLOCK  XXX             XXX       XXX             XXX       &kp COLON       &kp KP_N1   &kp KP_N2   &kp KP_N3   &kp KP_EQUAL  XXX
                                  XXX           XXX             XXX             XXX                                 XXX             &kp KP_N0   &dot_comma  &kp COMMA
        >;
        // sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
      };

      numbers_layer {
        label= "NUMBERS";
          bindings = <
                       &kp F1       &kp F2        &kp F3          &kp F4          &kp F5                              &kp F6          &kp F7        &kp KP_N8   &kp F9        &kp F10
          XXX          &kp NUMBER_1 &kp NUMBER_2  &kp NUMBER_3    &kp NUMBER_4    &kp NUMBER_5                        &kp NUMBER_6    &kp NUMBER_7  &kp KP_N8   &kp NUMBER_9  &kp NUMBER_0    XXX
          XXX          &kp F11      &kp F12       &kp F13         &kp F14         &kp F15      XXX             XXX    &kp F16         &kp F17       &kp KP_N8   &kp F19       &kp F20         XXX
                                    XXX           XXX             XXX             XXX                                 XXX             &kp KP_N0     &dot_comma  &kp COMMA
        >;
        // sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
      };

      bluetooth_layer {
        label= "BLUETOOTH";
          bindings = <
                        &sys_reset    &bt BT_CLR    &out OUT_BLE  &out OUT_USB  &bootloader                           &bootloader   XXX           XXX           XXX           &sys_reset
          XXX           XXX           &bt BT_SEL 4  &bt BT_SEL 5  XXX           XXX                                   XXX           XXX           XXX           XXX           XXX           XXX
          XXX           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  XXX           XXX             XXX     XXX           XXX           XXX           XXX           XXX           XXX
                                      XXX           XXX           XXX           XXX                                   XXX           XXX           XXX           XXX
        >;
        // sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
      };

      fun_layer {
        label= "LANG";
          bindings = <
                       XXX        &sch_macro  XXX       XXX       XXX                         XXX       XXX       &kp RA(P)   &kp RA(Y)     XXX
          XXX          &qui_macro &kp RA(S)   XXX       XXX       XXX                         XXX       XXX       &kp RA(L)   &kp RA(Z)     &kp RA(Q)   XXX
          XXX          &qu_macro  XXX         XXX       XXX       XXX    XXX          XXX     XXX       XXX       XXX         XXX           &kp RA(W)   XXX
                                  XXX         XXX       XXX       XXX                         XXX       XXX       XXX         XXX
        >;
        // sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
      };
    };
  };