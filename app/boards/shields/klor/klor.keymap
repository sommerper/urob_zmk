#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/ext_power.h>
#include "../zmk-nodefree-config/helper.h"
#include "../zmk-nodefree-config/keypos_def/keypos_klor.h"

#define BASE      0
#define QURE      1
#define LOWER     2
#define RAISE     3
#define EXTRAS    4
#define NUMPAD    5
#define BLUETOOTH 6
#define FUNC      7

#define KEYS_L LT4 LT3 LT2 LT1 LT0 LM5 LM4 LM3 LM2 LM1 LM0 LB5 LB4 LB3 LB2 LB1 LB0  // left-hand keys
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RM0 RM1 RM2 RM3 RM4 RM5 RB0 RB1 RB2 RB3 RB4 RB5  // right-hand keys
#define THUMBS_L LH3 LH2 LH1 LH0
#define THUMBS_R RH0 RH1 RH2 RH3

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <LOWER RAISE>;
            then-layer = <EXTRAS>;
        };
    };
};


#define XXX &none
#define ___ &trans

#undef COMBO_TERM
#define COMBO_TERM 40

ZMK_COMBO(comboColon, &kp COLON, RB1 RB2, 0)
ZMK_COMBO(comboSingleQuote, &kp SINGLE_QUOTE, RT1 RT2, 0)
ZMK_COMBO(comboDoubleQuote, &kp DOUBLE_QUOTES,  RT2 RT3, 0)

#define MAKE_HRM(NAME, HOLD, TAP, TRIGGER_POS) \
    ZMK_BEHAVIOR(NAME, hold_tap, \
        flavor = "balanced"; \
        tapping-term-ms = <280>; \
        quick-tap-ms = <175>; \
        bindings = <HOLD>, <TAP>; \
        hold-trigger-key-positions = <TRIGGER_POS>; \
        hold-trigger-on-release; \
    )

// left-hand HRMs
MAKE_HRM(hml, &kp, &kp, KEYS_R THUMBS_L THUMBS_R)

// right-hand HRMs
MAKE_HRM(hmr, &kp, &kp, KEYS_L THUMBS_L THUMBS_R)

&lt {
  tapping-term-ms = <280>;
  quick-tap-ms = <175>; // repeat on tap-into-hold
  flavor = "balanced";
};

&mt {
  tapping-term-ms = <280>;
  quick-tap-ms = <200>; // repeat on tap-into-hold
  flavor = "balanced";
};

// ----------------------------
ZMK_BEHAVIOR(lt_spc, hold_tap,
    flavor = "balanced";
    tapping-term-ms = <200>;
    quick-tap-ms = <175>;
    bindings = <&mo>, <&spc_morph>;
)
ZMK_BEHAVIOR(spc_morph, mod_morph,
    bindings = <&kp SPACE>, <&dot_spc>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
)
ZMK_BEHAVIOR(dot_spc, macro,
    wait-ms = <0>;
    tap-ms = <5>;
    bindings = <&kp DOT &kp SPACE &sk LSHFT>;
)
// ----------------------------
// ----------------------------
ZMK_BEHAVIOR(alt_dot, hold_tap,
    flavor = "balanced";
    tapping-term-ms = <200>;
    bindings = <&kp>, <&alt_morph>;
)
ZMK_BEHAVIOR(alt_morph, mod_morph,
    bindings = <&kp DOT>, <&kp COMMA>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
)
// ----------------------------
// ----------------------------
ZMK_BEHAVIOR(copy_cut, tap_dance,
    tapping-term-ms = <200>;
    bindings = <&kp LC(INS)>, <&kp LC(X)>;
)

ZMK_BEHAVIOR(dot_comma, tap_dance,
    tapping-term-ms = <200>;
    bindings = <&kp DOT>, <&kp COMMA>;
)

ZMK_BEHAVIOR(sqt_dqt, tap_dance,
    tapping-term-ms = <200>;
    bindings = <&kp SQT>, <&kp DQT>;
)
// ----------------------------

/ {

    keymap {
      compatible = "zmk,keymap";

      // base_layer {
      //   label= "BASE";
      //   bindings = <
      //               &kp Q       &kp W         &kp F           &kp P     &kp B                                 &kp J               &kp L         &kp U         &kp Y         &kp Z
      //     &kp ESC   &kp A       &kp R         &kp S           &kp T     &kp G                                 &kp M               &kp N         &kp E         &kp I         &kp O        &kp SEMI
      //     &kp TAB   &kp COMMA   &kp K         &kp C           &kp D     &sqt_dqt      &trans      &trans      &kp COLON           &kp H         &kp X         &kp V         &dot_comma   &kp ENTER
      //               XXX         &mt LALT TAB  &lt LOWER BSPC  &lt NUMPAD ESC                      &kp ENTER   &lt_spc RAISE 0     &alt_dot RALT 0    XXX
      //   >;
      //   sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
      //   //sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
      // };

      base_layer {
        label= "BASE";
        bindings = <
                    XXX         &kp C         &kp L               &kp D         &kp K                                 &kp J               &kp F         &kp O         &kp U         &kp SEMI
          &kp ESC   &kp R       &hml LGUI S   &hml LCTRL T        &hml LSHIFT H &kp G                                 &kp M               &hmr RSHIFT N &hmr RCTRL E  &hmr RGUI I   &kp A       &kp SEMI
          &kp TAB   &kp Q       &kp W         &kp V               &lt NUMPAD B  &sqt_dqt    &trans          &trans    &kp COLON           &kp P         &kp X         &kp Y         &kp Z       &kp ENTER
                    XXX         &mt LALT TAB  &lt LOWER BSPC      &lt NUMPAD ESC                      &kp ENTER   &lt_spc RAISE 0     &alt_dot RALT 0    XXX
        >;
        sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        //sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
      };

      qure_layer {
        label= "QURE";
        bindings = <
                    XXX         &kp C         &kp L           &kp D         &kp B                             &kp J           &kp U         &kp O         &kp Y         &kp SEMI
          &kp ESC   &kp A       &hml LGUI R   &hml LCTRL S    &hml LSHFT T  &kp G                             &kp M           &hmr RSHIFT N &hmr RCTRL E  &hmr RGUI I   &kp R     &kp SEMI
          &kp TAB   &kp Z       &kp K         &kp C           &lt NUMPAD D  &sqt_dqt  &trans      &trans      &kp COLON       &kp K         &kp X         &kp V         &kp Z     &kp ENTER
                    XXX         &mt LALT TAB  &lt LOWER BSPC  &lt NUMPAD ESC                      &kp ENTER   &lt_spc RAISE 0 &alt_dot RALT 0     XXX
        >;
        //sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;

      };

      lower_layer {
        label= "LOWER";
        bindings = <
                    &trans &kp K_VOL_DN &kp K_MUTE &kp K_VOL_UP &trans                     &kp SQT   &kp HOME  &kp GRAVE &kp END   &kp DQT
          &trans    &trans    &trans    &kp COMMA &kp DOT   &trans                         &trans    &kp LEFT  &kp UP    &kp RIGHT &trans   &trans
          &trans    &trans    &kp LC(Z) &copy_cut &kp LC(V) &trans    &trans     &trans    &trans    &kp PG_UP &kp DOWN  &kp PG_DN &trans   &trans
                                        &trans    &trans    &kp DEL   &trans     &trans    &kp MINUS &trans    &trans
        >;
        // sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
      };


      raise_layer {
        label= "RAISE";
        bindings = <
                    &kp EXCL  &kp AT    &kp HASH  &kp DOLLAR  &kp PERCENT                    &kp CARET &kp AMPS  &kp LPAR  &kp RPAR   &kp ASTRK
          &trans    &kp DOT   &kp LT    &kp FSLH  &kp GT      &kp QMARK                      &kp PIPE  &kp PLUS  &kp LBRC  &kp RBRC   &kp SQT   &trans
          &trans    &trans    &kp TILDE &kp SEMI  &kp COLON   &kp BSLH  &trans     &trans    &kp EQUAL &kp MINUS &kp LBKT  &kp RBKT   &kp DQT   &trans
                                        &trans    &trans      &kp UNDER &trans     &trans    &trans    &trans    &trans
        >;
        // sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
      };

      adjust_layer {
        label= "EXTRAS";
          bindings = <
                       &trans     &trans    &to QURE  &to BASE  &mo BLUETOOTH                  &kp F13   &kp F7   &kp RA(Y) &kp F9    &kp F10
          &trans       &kp RA(Q)  &trans    &kp RA(S) &trans    &trans                         &kp F14   &kp F4   &kp F5    &kp F6    &kp F11  &kp F8
          &trans       &trans     &trans    &trans    &trans    &trans    &trans     &trans    &kp F15   &kp F1   &kp F2    &kp F3    &kp F12  &trans
                                            &trans    &trans    &trans    &trans     &trans    &trans    &trans   &trans
        >;
        // sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
      };

      numbpad_layer {
        label= "NUMPAD";
          bindings = <
                       &trans     &trans    &trans        &trans    &trans                         &kp KP_DIVIDE   &kp KP_N7   &kp KP_N8   &kp KP_N9   &kp KP_MINUS
          &trans       &trans     &trans    &trans        &trans    &trans                         &kp KP_MULTIPLY &kp KP_N4   &kp KP_N5   &kp KP_N6   &kp KP_PLUS   &trans
          &trans       &trans     &trans    &kp CAPSLOCK  &kp KP_NUMLOCK &trans    &trans     &trans    &trans     &kp KP_N1   &kp KP_N2   &kp KP_N3   &kp EQL       &trans
                                            &trans        &trans         &trans    &trans     &trans    &kp KP_N0  &dot_comma  &trans
        >;
        // sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
      };

      bluetooth_layer {
        label= "BLUETOOTH";
          bindings = <
                       &trans     &trans    &trans    &trans    &trans                         &trans    &trans   &trans    &trans    &trans
          &bootloader  &trans     &trans    &trans    &trans    &trans                         &trans    &trans   &trans    &trans    &trans   &trans
          &sys_reset   &trans     &trans    &trans    &trans    &trans    &trans     &trans    &trans    &trans   &trans    &trans    &trans   &trans
                                            &trans    &trans    &trans    &trans     &trans    &trans    &trans   &trans
        >;
        // sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
      };

      fun_layer {
        label= "FUNC";
          bindings = <
                       &trans     &trans    &trans    &trans    &trans                         &kp F13  &kp F7   &kp RA(Y) &kp F9   &kp F10
          &bootloader  &trans     &trans    &trans    &trans    &trans                         &kp F14  &kp F4   &kp F5    &kp F6   &kp F11  &kp F8
          &sys_reset   &trans     &trans    &trans    &trans    &trans    &trans     &trans    &kp F15  &kp F1   &kp F2    &kp F3   &kp F12  &trans
                                            &trans    &trans    &trans    &trans     &trans    &trans   &trans   &trans
        >;
        // sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
      };
    };
  };